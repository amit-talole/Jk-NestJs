generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int             @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String          @unique
  password    String
  createdAt   DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime        @default(now()) @db.Timestamptz(6)
  role        user_role_enum?
  documents   documents[]
  ingestion   ingestion[]
  user_tokens user_tokens?
}

model user_tokens {
  id           Int      @id @default(autoincrement())
  refreshToken String?
  userId       Int      @unique
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_token_user_id")
}

model documents {
  id           Int      @id @default(autoincrement())
  name         String?
  userId       Int
  link         String?
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  type         String?
  originalName String?
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model ingestion {
  id         Int             @id @default(autoincrement())
  title      String?
  status     ingestion_enum?
  userId     Int
  webhookUrl String?
  created_at DateTime        @default(now()) @db.Timestamp(6)
  updated_at DateTime        @default(now()) @db.Timestamp(6)
  user       user            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ingestion_user_id")
}

enum user_role_enum {
  admin
  editor
  viewer
}

enum ingestion_enum {
  IN_PROGRESS
  PENDING
  COMPLETED
  FAILED
}
