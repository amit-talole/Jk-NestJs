name: Deploy Node App on EC2 

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create .env from GitHub secrets
        run: |
          cat <<EOF > .env
          PORT=3100
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} 
          JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} 
          EOF

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Build the app
        run: npm run build

      - name: Start app for E2E testing
        run: |
          nohup npm run start:dev > app.log 2>&1 &
          sleep 10  # wait for the app to boot

      - name: Run E2E tests
        run: npm run test:e2e


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Create .env from GitHub secrets
      #   run: |
      #     cat <<EOF > .env
      #     PORT=3100
      #     DATABASE_URL=${{ secrets.DATABASE_URL }}
      #     JWT_SECRET=${{ secrets.JWT_SECRET }}
      #     JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} 
      #     JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} 
      #     EOF


      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/jk:latest

      - name: SSH & Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/jk:latest
            docker stop node-app || true
            docker rm node-app || true
            docker run -d \
              --name node-app \
               -p 3100:3100 \
              -e PORT=3100 \
              ${{ secrets.DOCKER_USERNAME }}/jk:latest
